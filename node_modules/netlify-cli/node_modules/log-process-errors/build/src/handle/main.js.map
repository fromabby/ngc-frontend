{"version":3,"sources":["../../../src/handle/main.js"],"names":["handleEvent","uncaughtException","context","value","warning","unhandledRejection","promise","rejectionHandled","multipleResolves","type","nextValue","nextRejected","TYPE_TO_REJECTED","resolve","reject","EVENTS"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B;;;;AAIA,KAAMC,CAAAA,iBAAiB,CAAG,SAAUC,OAAV,CAAmBC,KAAnB,CAA0B;AAClDH,WAAW,CAAC,CAAE,GAAGE,OAAL,CAAcC,KAAd,CAAD,CAAX;AACD,CAFD;;AAIA,KAAMC,CAAAA,OAAO,CAAG,SAAUF,OAAV,CAAmBC,KAAnB,CAA0B;AACxCH,WAAW,CAAC,CAAE,GAAGE,OAAL,CAAcC,KAAd,CAAD,CAAX;AACD,CAFD;;AAIA,KAAME,CAAAA,kBAAkB,CAAG,SAAUH,OAAV,CAAmBC,KAAnB,CAA0BG,OAA1B,CAAmC;AAC5DN,WAAW,CAAC,CAAE,GAAGE,OAAL,CAAcI,OAAd,CAAuBH,KAAvB,CAAD,CAAX;AACD,CAFD;;AAIA,KAAMI,CAAAA,gBAAgB,CAAG,SAAUL,OAAV,CAAmBI,OAAnB,CAA4B;AACnDN,WAAW,CAAC,CAAE,GAAGE,OAAL,CAAcI,OAAd,CAAD,CAAX;AACD,CAFD;;;AAKA,KAAME,CAAAA,gBAAgB,CAAG,SAAUN,OAAV,CAAmBO,IAAnB,CAAyBH,OAAzB,CAAkCI,SAAlC,CAA6C;AACpE,KAAMC,CAAAA,YAAY,CAAGC,gBAAgB,CAACH,IAAD,CAArC;AACAT,WAAW,CAAC,CAAE,GAAGE,OAAL,CAAcI,OAAd,CAAuBK,YAAvB,CAAqCD,SAArC,CAAD,CAAX;AACD,CAHD;;AAKA,KAAME,CAAAA,gBAAgB,CAAG;AACvBC,OAAO,CAAE,KADc;AAEvBC,MAAM,CAAE,IAFe,CAAzB;;;AAKA,MAAO,MAAMC,CAAAA,MAAM,CAAG;AACpBd,iBADoB;AAEpBG,OAFoB;AAGpBC,kBAHoB;AAIpBE,gBAJoB;AAKpBC,gBALoB,CAAf","sourcesContent":["import { handleEvent } from './common.js'\n\n// List of all handled events\n// Each event must pass its related `value` to the generic `handleEvent()`\nconst uncaughtException = function (context, value) {\n  handleEvent({ ...context, value })\n}\n\nconst warning = function (context, value) {\n  handleEvent({ ...context, value })\n}\n\nconst unhandledRejection = function (context, value, promise) {\n  handleEvent({ ...context, promise, value })\n}\n\nconst rejectionHandled = function (context, promise) {\n  handleEvent({ ...context, promise })\n}\n\n// eslint-disable-next-line max-params\nconst multipleResolves = function (context, type, promise, nextValue) {\n  const nextRejected = TYPE_TO_REJECTED[type]\n  handleEvent({ ...context, promise, nextRejected, nextValue })\n}\n\nconst TYPE_TO_REJECTED = {\n  resolve: false,\n  reject: true,\n}\n\nexport const EVENTS = {\n  uncaughtException,\n  warning,\n  unhandledRejection,\n  rejectionHandled,\n  multipleResolves,\n}\n"],"file":"src/handle/main.js"}